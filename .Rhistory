if (i > 1){
KLtrue[i] <- KL(mutrue[i,],mutrue[i-1,],vartrue[[i]],vartrue[[i-1]])
}
X[i,] <- chol(vartrue[[i]]) %*% rnorm(p,0,1) + mutrue[i,]
}
#cat('Avg KL at change:',)
groundTruth <- list(
mutrue=mutrue, vartrue=vartrue, KLtrue=KLtrue
)
return(list(X=X,groundTruth=groundTruth))
}
rm(list=ls())
source('R/library.R')
p <- 5
n <- 1000
w <- 200
# even priors for the first half
ind2 <- (1:(n/2))*2-1
ind4 <- (1:(n/4))*4-3
Y <- rep(1,n)
Y[ind2[ind2>n/2]] <- 2
Y[ind2[ind2<n/2]] <- 2
outGen1 <- genAbrupt(n=sum(Y==1), muW=w, p=p, seed=1)
outGen2 <- genAbrupt(n=sum(Y==2), muW=w, p=p, seed=2)
X <- matrix(NA,n,p)
X[Y==1,] <- outGen1$X
X[Y==2,] <- outGen2$X
paramsLDA <- list()
etas <- matrix(NA,n,4)
chats <- rep(1,n)
scores <- rep(1,n)
for (i in 1:n){
if (i > 1){
outClass <- classify.LDA(X[i,], paramsLDA)
chats[i] <- outClass$chat
scores[i] <- outClass$score
}
paramsLDA <- update.LDA(X[i,], Y[i], paramsLDA)
if (length(paramsLDA[[1]])>0){
etas[i,1] <- paramsLDA[[1]]$eta
}
if (length(paramsLDA[[2]])>0){
etas[i,2] <- paramsLDA[[2]]$eta
}
etas[i,3] <- paramsLDA[[3]]$eta
etas[i,4] <- paramsLDA[[4]]$eta
}
par(mfrow=c(2,1))
plot(which(Y==1),X[Y==1,1],col='red',ylim=c(min(X),max(X)))
points(which(Y==2),X[Y==2,1],col='blue')
plot(etas[,1],type='l',ylim=c(0,0.3),col='red')
lines(etas[,2],col='blue')
lines(etas[,3],col='green')
lines(etas[,4],col='black')
print(mean(chats==Y))
plot(etas[,4])
paramsLDA$prior
rm(list=ls())
source('R/library.R')
p <- 5
n <- 1000
w <- 200
# even priors for the first half
ind2 <- (1:(n/2))*2-1
ind4 <- (1:(n/4))*4-3
Y <- rep(1,n)
Y[ind2[ind2>n/2]] <- 2
Y[ind2[ind2<n/2]] <- 2
outGen1 <- genAbrupt(n=sum(Y==1), muW=w, p=p, seed=1)
outGen2 <- genAbrupt(n=sum(Y==2), muW=w, p=p, seed=2)
X <- matrix(NA,n,p)
X[Y==1,] <- outGen1$X
X[Y==2,] <- outGen2$X
paramsLDA <- list()
etas <- matrix(NA,n,4)
chats <- rep(1,n)
scores <- rep(1,n)
for (i in 1:n){
if (i > 1){
outClass <- classify.LDA(X[i,], paramsLDA)
chats[i] <- outClass$chat
scores[i] <- outClass$score
}
paramsLDA <- update.LDA(X[i,], Y[i], paramsLDA)
if (length(paramsLDA[[1]])>0){
etas[i,1] <- paramsLDA[[1]]$eta
}
if (length(paramsLDA[[2]])>0){
etas[i,2] <- paramsLDA[[2]]$eta
}
etas[i,3] <- paramsLDA[[3]]$eta
etas[i,4] <- paramsLDA[[4]]$eta
}
par(mfrow=c(2,1))
plot(which(Y==1),X[Y==1,1],col='red',ylim=c(min(X),max(X)))
points(which(Y==2),X[Y==2,1],col='blue')
plot(etas[,1],type='l',ylim=c(0,0.3),col='red')
lines(etas[,2],col='blue')
lines(etas[,3],col='green')
lines(etas[,4],col='black')
print(mean(chats==Y))
mean(Y[1:n/2])
mean(Y[n/2:n])
paramsLDA$prior
mean(Y[n/2:n])
mean(Y[n/2:n])-1
rm(list=ls())
source('R/library.R')
p <- 5
n <- 1000
w <- 200
# even priors for the first half
ind2 <- (1:(n/2))*2-1
ind4 <- (1:(n/4))*4-3
Y <- rep(1,n)
Y[ind2[ind2>n/2]] <- 2
Y[ind2[ind2<n/2]] <- 2
outGen1 <- genAbrupt(n=sum(Y==1), muW=w, p=p, seed=1)
outGen2 <- genAbrupt(n=sum(Y==2), muW=w, p=p, seed=2)
X <- matrix(NA,n,p)
X[Y==1,] <- outGen1$X
X[Y==2,] <- outGen2$X
paramsLDA <- list()
etas <- matrix(NA,n,4)
chats <- rep(1,n)
scores <- rep(1,n)
for (i in 1:n){
if (i > 1){
outClass <- classify.LDA(X[i,], paramsLDA)
chats[i] <- outClass$chat
scores[i] <- outClass$score
}
paramsLDA <- update.LDA(X[i,], Y[i], paramsLDA)
if (length(paramsLDA[[1]])>0){
etas[i,1] <- paramsLDA[[1]]$eta
}
if (length(paramsLDA[[2]])>0){
etas[i,2] <- paramsLDA[[2]]$eta
}
etas[i,3] <- paramsLDA[[3]]$eta
etas[i,4] <- paramsLDA[[4]]$eta
}
par(mfrow=c(2,1))
plot(which(Y==1),X[Y==1,1],col='red',ylim=c(min(X),max(X)))
points(which(Y==2),X[Y==2,1],col='blue')
plot(etas[,1],type='l',ylim=c(0,0.3),col='red')
lines(etas[,2],col='blue')
lines(etas[,3],col='green')
lines(etas[,4],col='black')
print(mean(chats==Y))
paramsLDA$prior
rm(list=ls())
source('R/library.R')
p <- 5
n <- 1000
w <- 200
# even priors for the first half
ind2 <- (1:(n/2))*2-1
ind4 <- (1:(n/4))*4-3
Y <- rep(1,n)
Y[ind2[ind2>n/2]] <- 2
Y[ind2[ind2<n/2]] <- 2
outGen1 <- genAbrupt(n=sum(Y==1), muW=w, p=p, seed=1)
outGen2 <- genAbrupt(n=sum(Y==2), muW=w, p=p, seed=2)
X <- matrix(NA,n,p)
X[Y==1,] <- outGen1$X
X[Y==2,] <- outGen2$X
paramsLDA <- list()
etas <- matrix(NA,n,4)
chats <- rep(1,n)
scores <- rep(1,n)
for (i in 1:n){
if (i > 1){
outClass <- classify.LDA(X[i,], paramsLDA)
chats[i] <- outClass$chat
scores[i] <- outClass$score
}
paramsLDA <- update.LDA(X[i,], Y[i], paramsLDA)
if (length(paramsLDA[[1]])>0){
etas[i,1] <- paramsLDA[[1]]$eta
}
if (length(paramsLDA[[2]])>0){
etas[i,2] <- paramsLDA[[2]]$eta
}
etas[i,3] <- paramsLDA[[3]]$eta
etas[i,4] <- paramsLDA[[4]]$eta
}
par(mfrow=c(2,1))
plot(which(Y==1),X[Y==1,1],col='red',ylim=c(min(X),max(X)))
points(which(Y==2),X[Y==2,1],col='blue')
plot(etas[,1],type='l',ylim=c(0,0.3),col='red')
lines(etas[,2],col='blue')
lines(etas[,3],col='green')
lines(etas[,4],col='black')
print(mean(chats==Y))
paramsLDA$prior
rm(list=ls())
source('R/library.R')
p <- 5
n <- 1000
w <- 200
# even priors for the first half
ind2 <- (1:(n/2))*2-1
ind4 <- (1:(n/4))*4-3
Y <- rep(1,n)
Y[ind2[ind2>n/2]] <- 2
Y[ind2[ind2<n/2]] <- 2
outGen1 <- genAbrupt(n=sum(Y==1), muW=w, p=p, seed=1)
outGen2 <- genAbrupt(n=sum(Y==2), muW=w, p=p, seed=2)
X <- matrix(NA,n,p)
X[Y==1,] <- outGen1$X
X[Y==2,] <- outGen2$X
paramsLDA <- list()
etas <- matrix(NA,n,4)
chats <- rep(1,n)
scores <- rep(1,n)
for (i in 1:n){
if (i > 1){
outClass <- classify.LDA(X[i,], paramsLDA)
chats[i] <- outClass$chat
scores[i] <- outClass$score
}
paramsLDA <- update.LDA(X[i,], Y[i], paramsLDA)
if (length(paramsLDA[[1]])>0){
etas[i,1] <- paramsLDA[[1]]$eta
}
if (length(paramsLDA[[2]])>0){
etas[i,2] <- paramsLDA[[2]]$eta
}
etas[i,3] <- paramsLDA[[3]]$eta
etas[i,4] <- paramsLDA[[4]]$eta
}
par(mfrow=c(2,1))
plot(which(Y==1),X[Y==1,1],col='red',ylim=c(min(X),max(X)))
points(which(Y==2),X[Y==2,1],col='blue')
plot(etas[,1],type='l',ylim=c(0,0.3),col='red')
lines(etas[,2],col='blue')
lines(etas[,3],col='green')
lines(etas[,4],col='black')
print(mean(chats==Y))
rm(list=ls())
source('R/library.R')
p <- 5
n <- 1000
w <- 200
# even priors for the first half
ind2 <- (1:(n/2))*2-1
ind4 <- (1:(n/4))*4-3
Y <- rep(1,n)
Y[ind2[ind2>n/2]] <- 2
Y[ind2[ind2<n/2]] <- 2
outGen1 <- genAbrupt(n=sum(Y==1), muW=w, p=p, seed=1)
outGen2 <- genAbrupt(n=sum(Y==2), muW=w, p=p, seed=2)
X <- matrix(NA,n,p)
X[Y==1,] <- outGen1$X
X[Y==2,] <- outGen2$X
paramsLDA <- list()
etas <- matrix(NA,n,4)
chats <- rep(1,n)
scores <- rep(1,n)
for (i in 1:n){
if (i > 1){
outClass <- classify.LDA(X[i,], paramsLDA)
chats[i] <- outClass$chat
scores[i] <- outClass$score
}
paramsLDA <- update.LDA(X[i,], Y[i], paramsLDA)
if (length(paramsLDA[[1]])>0){
etas[i,1] <- paramsLDA[[1]]$eta
}
if (length(paramsLDA[[2]])>0){
etas[i,2] <- paramsLDA[[2]]$eta
}
etas[i,3] <- paramsLDA[[3]]$eta
etas[i,4] <- paramsLDA[[4]]$eta
}
par(mfrow=c(2,1))
plot(which(Y==1),X[Y==1,1],col='red',ylim=c(min(X),max(X)))
points(which(Y==2),X[Y==2,1],col='blue')
plot(etas[,1],type='l',ylim=c(0,0.3),col='red')
lines(etas[,2],col='blue')
lines(etas[,3],col='green')
lines(etas[,4],col='black')
print(mean(chats==Y))
paramsLDA$prior
rm(list=ls())
source('R/library.R')
p <- 5
n <- 1000
w <- 200
# even priors for the first half
ind2 <- (1:(n/2))*2-1
ind4 <- (1:(n/4))*4-3
Y <- rep(1,n)
Y[ind2[ind2>n/2]] <- 2
Y[ind2[ind2<n/2]] <- 2
outGen1 <- genAbrupt(n=sum(Y==1), muW=w, p=p, seed=1)
outGen2 <- genAbrupt(n=sum(Y==2), muW=w, p=p, seed=2)
X <- matrix(NA,n,p)
X[Y==1,] <- outGen1$X
X[Y==2,] <- outGen2$X
paramsLDA <- list()
etas <- matrix(NA,n,4)
chats <- rep(1,n)
scores <- rep(1,n)
for (i in 1:n){
if (i > 1){
outClass <- classify.LDA(X[i,], paramsLDA)
chats[i] <- outClass$chat
scores[i] <- outClass$score
}
paramsLDA <- update.LDA(X[i,], Y[i], paramsLDA)
if (length(paramsLDA[[1]])>0){
etas[i,1] <- paramsLDA[[1]]$eta
}
if (length(paramsLDA[[2]])>0){
etas[i,2] <- paramsLDA[[2]]$eta
}
etas[i,3] <- paramsLDA[[3]]$eta
etas[i,4] <- paramsLDA[[4]]$eta
}
par(mfrow=c(2,1))
plot(which(Y==1),X[Y==1,1],col='red',ylim=c(min(X),max(X)))
points(which(Y==2),X[Y==2,1],col='blue')
plot(etas[,1],type='l',ylim=c(0,0.3),col='red')
lines(etas[,2],col='blue')
lines(etas[,3],col='green')
lines(etas[,4],col='black')
print(mean(chats==Y))
paramsLDA$prior
Y==1
Y==2
rm(list=ls())
source('R/library.R')
p <- 5
n <- 1000
w <- 200
# even priors for the first half
ind2 <- (1:(n/2))*2-1
ind4 <- (1:(n/4))*4-3
Y <- rep(1,n)
Y[ind4[ind2>n/2]] <- 2
Y[ind2[ind2<n/2]] <- 2
outGen1 <- genAbrupt(n=sum(Y==1), muW=w, p=p, seed=1)
outGen2 <- genAbrupt(n=sum(Y==2), muW=w, p=p, seed=2)
X <- matrix(NA,n,p)
X[Y==1,] <- outGen1$X
X[Y==2,] <- outGen2$X
paramsLDA <- list()
etas <- matrix(NA,n,4)
chats <- rep(1,n)
scores <- rep(1,n)
for (i in 1:n){
if (i > 1){
outClass <- classify.LDA(X[i,], paramsLDA)
chats[i] <- outClass$chat
scores[i] <- outClass$score
}
paramsLDA <- update.LDA(X[i,], Y[i], paramsLDA)
if (length(paramsLDA[[1]])>0){
etas[i,1] <- paramsLDA[[1]]$eta
}
if (length(paramsLDA[[2]])>0){
etas[i,2] <- paramsLDA[[2]]$eta
}
etas[i,3] <- paramsLDA[[3]]$eta
etas[i,4] <- paramsLDA[[4]]$eta
}
par(mfrow=c(2,1))
plot(which(Y==1),X[Y==1,1],col='red',ylim=c(min(X),max(X)))
points(which(Y==2),X[Y==2,1],col='blue')
plot(etas[,1],type='l',ylim=c(0,0.3),col='red')
lines(etas[,2],col='blue')
lines(etas[,3],col='green')
lines(etas[,4],col='black')
print(mean(chats==Y))
outLDA$prior
paramsLDA$prior
rm(list=ls())
source('R/library.R')
p <- 5
n <- 1000
w <- 200
# even priors for the first half
ind2 <- (1:(n/2))*2-1
ind4 <- (1:(n/4))*4-3
Y <- rep(1,n)
Y[ind4[ind4>n/2]] <- 2
Y[ind2[ind2<n/2]] <- 2
outGen1 <- genAbrupt(n=sum(Y==1), muW=w, p=p, seed=1)
outGen2 <- genAbrupt(n=sum(Y==2), muW=w, p=p, seed=2)
X <- matrix(NA,n,p)
X[Y==1,] <- outGen1$X
X[Y==2,] <- outGen2$X
paramsLDA <- list()
etas <- matrix(NA,n,4)
chats <- rep(1,n)
scores <- rep(1,n)
for (i in 1:n){
if (i > 1){
outClass <- classify.LDA(X[i,], paramsLDA)
chats[i] <- outClass$chat
scores[i] <- outClass$score
}
paramsLDA <- update.LDA(X[i,], Y[i], paramsLDA)
if (length(paramsLDA[[1]])>0){
etas[i,1] <- paramsLDA[[1]]$eta
}
if (length(paramsLDA[[2]])>0){
etas[i,2] <- paramsLDA[[2]]$eta
}
etas[i,3] <- paramsLDA[[3]]$eta
etas[i,4] <- paramsLDA[[4]]$eta
}
par(mfrow=c(2,1))
plot(which(Y==1),X[Y==1,1],col='red',ylim=c(min(X),max(X)))
points(which(Y==2),X[Y==2,1],col='blue')
plot(etas[,1],type='l',ylim=c(0,0.3),col='red')
lines(etas[,2],col='blue')
lines(etas[,3],col='green')
lines(etas[,4],col='black')
print(mean(chats==Y))
paramsLDA$prior
rm(list=ls())
source('R/library.R')
p <- 5
n <- 1000
w <- 200
# even priors for the first half
ind2 <- (1:(n/2))*2-1
ind4 <- (1:(n/4))*4-3
Y <- rep(1,n)
Y[ind4[ind4>n/2]] <- 2
Y[ind2[ind2<n/2]] <- 2
outGen1 <- genAbrupt(n=sum(Y==1), muW=w, p=p, seed=1)
outGen2 <- genAbrupt(n=sum(Y==2), muW=w, p=p, seed=2)
X <- matrix(NA,n,p)
X[Y==1,] <- outGen1$X
X[Y==2,] <- outGen2$X
paramsLDA <- list()
etas <- matrix(NA,n,4)
chats <- rep(1,n)
scores <- rep(1,n)
for (i in 1:n){
if (i > 1){
outClass <- classify.LDA(X[i,], paramsLDA)
chats[i] <- outClass$chat
scores[i] <- outClass$score
}
paramsLDA <- update.LDA(X[i,], Y[i], paramsLDA)
if (length(paramsLDA[[1]])>0){
etas[i,1] <- paramsLDA[[1]]$eta
}
if (length(paramsLDA[[2]])>0){
etas[i,2] <- paramsLDA[[2]]$eta
}
etas[i,3] <- paramsLDA[[3]]$eta
etas[i,4] <- paramsLDA[[4]]$eta
}
par(mfrow=c(2,1))
plot(which(Y==1),X[Y==1,1],col='red',ylim=c(min(X),max(X)))
points(which(Y==2),X[Y==2,1],col='blue')
plot(etas[,1],type='l',ylim=c(0,0.3),col='red')
lines(etas[,2],col='blue')
lines(etas[,3],col='green')
lines(etas[,4],col='black')
print(mean(chats==Y))
paramsLDA$prior
rm(list=ls())
source('R/library.R')
p <- 5
n <- 1000
w <- 200
# even priors for the first half
ind2 <- (1:(n/2))*2-1
ind4 <- (1:(n/4))*4-3
Y <- rep(1,n)
Y[ind4[ind4>n/2]] <- 2
Y[ind2[ind2<n/2]] <- 2
outGen1 <- genAbrupt(n=sum(Y==1), muW=w, p=p, seed=1)
outGen2 <- genAbrupt(n=sum(Y==2), muW=w, p=p, seed=2)
X <- matrix(NA,n,p)
X[Y==1,] <- outGen1$X
X[Y==2,] <- outGen2$X
paramsLDA <- list()
etas <- matrix(NA,n,4)
chats <- rep(1,n)
scores <- rep(1,n)
for (i in 1:n){
if (i > 1){
outClass <- classify.LDA(X[i,], paramsLDA)
chats[i] <- outClass$chat
scores[i] <- outClass$score
}
paramsLDA <- update.LDA(X[i,], Y[i], paramsLDA)
if (length(paramsLDA[[1]])>0){
etas[i,1] <- paramsLDA[[1]]$eta
}
if (length(paramsLDA[[2]])>0){
etas[i,2] <- paramsLDA[[2]]$eta
}
etas[i,3] <- paramsLDA[[3]]$eta
etas[i,4] <- paramsLDA[[4]]$eta
}
par(mfrow=c(2,1))
plot(which(Y==1),X[Y==1,1],col='red',ylim=c(min(X),max(X)))
points(which(Y==2),X[Y==2,1],col='blue')
plot(etas[,1],type='l',ylim=c(0,0.3),col='red')
lines(etas[,2],col='blue')
lines(etas[,3],col='green')
lines(etas[,4],col='black')
print(mean(chats==Y))
